// Code generated by jsonrpc2. DO NOT EDIT.
//go:generate jsonrpc2-gen --url http://127.0.0.1:9999 --go-linked --go api/client.go -o api/server.go --package api --go-package api -i interface.go -I Worker
package api

import (
	"context"
	"encoding/json"
	jsonrpc2 "github.com/reddec/jsonrpc2"
	internal "github.com/tinc-boot/tinc-desktop/cmd/tinc-desktop/internal"
)

func RegisterWorker(router *jsonrpc2.Router, wrap internal.Worker) []string {
	router.RegisterFunc("Worker.Kill", func(ctx context.Context, params json.RawMessage, positional bool) (interface{}, error) {
		var args struct{}
		var err error
		if positional {
			err = jsonrpc2.UnmarshalArray(params)
		} else {
			err = json.Unmarshal(params, &args)
		}
		if err != nil {
			return nil, err
		}
		return wrap.Kill(ctx)
	})

	router.RegisterFunc("Worker.Peers", func(ctx context.Context, params json.RawMessage, positional bool) (interface{}, error) {
		var args struct{}
		var err error
		if positional {
			err = jsonrpc2.UnmarshalArray(params)
		} else {
			err = json.Unmarshal(params, &args)
		}
		if err != nil {
			return nil, err
		}
		return wrap.Peers(ctx)
	})

	return []string{"Worker.Kill", "Worker.Peers"}
}
